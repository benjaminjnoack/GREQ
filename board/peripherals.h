/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_i2c.h"
#include "fsl_adc16.h"
#include "fsl_dspi.h"
#include "fsl_gpio.h"
#include "fsl_port.h"
#include "fsl_uart.h"
#include "fsl_clock.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* BOARD_InitPeripherals defines for I2C0 */
/* Definition of peripheral ID */
#define I2C_1_PERIPHERAL I2C0
/* Definition of the clock source */
#define I2C_1_CLOCK_SOURCE I2C0_CLK_SRC
/* Definition of the clock source frequency */
#define I2C_1_CLK_FREQ CLOCK_GetFreq(I2C_1_CLOCK_SOURCE)
/* Transfer buffer size. */
#define I2C_1_BUFFER_SIZE 10
/* Alias for ADC0 peripheral */
#define ADC16_1_PERIPHERAL ADC0
/* ADC16_1 interrupt vector ID (number). */
#define ADC16_1_IRQN ADC0_IRQn
/* ADC16_1 interrupt vector priority. */
#define ADC16_1_IRQ_PRIORITY 4
/* ADC16_1 interrupt handler identifier. */
#define ADC16_1_IRQHANDLER ADC0_IRQHandler
/* Alias for ADC1 peripheral */
#define ADC16_2_PERIPHERAL ADC1
/* ADC16_2 interrupt vector ID (number). */
#define ADC16_2_IRQN ADC1_IRQn
/* ADC16_2 interrupt vector priority. */
#define ADC16_2_IRQ_PRIORITY 4
/* ADC16_2 interrupt handler identifier. */
#define ADC16_2_IRQHANDLER ADC1_IRQHandler
/* BOARD_InitPeripherals defines for SPI1 */
/* Definition of peripheral ID */
#define DSPI_1_PERIPHERAL SPI1
/* Definition of the clock source */
#define DSPI_1_CLOCK_SOURCE DSPI1_CLK_SRC
/* Definition of the clock source frequency */
#define DSPI_1_CLK_FREQ CLOCK_GetFreq(DSPI_1_CLOCK_SOURCE)
/* Transfer buffer size. */
#define DSPI_1_BUFFER_SIZE 2

/* Definitions for BOARD_InitLEDsPeripheral functional group */
/* Alias for GPIOA peripheral */
#define BOARD_LEDRGB_BLUE_GPIO GPIOA
/* Alias for GPIOC peripheral */
#define BOARD_LEDRGB_RED_GPIO GPIOC
/* Alias for GPIOE peripheral */
#define BOARD_LEDRGB_GREEN_GPIO GPIOE

/* Definitions for BOARD_InitDEBUG_UARTPeripheral functional group */
/* Definition of peripheral ID */
#define BOARD_DEBUG_UART_PERIPHERAL UART0
/* Definition of the clock source frequency */
#define BOARD_DEBUG_UART_CLOCK_SOURCE CLOCK_GetFreq(UART0_CLK_SRC)

/* Definitions for BOARD_InitACCELPeripheral functional group */
/* BOARD_InitACCELPeripheral defines for I2C0 */
/* Definition of peripheral ID */
#define BOARD_ACCEL_I2C_PERIPHERAL I2C0
/* Definition of the clock source */
#define BOARD_ACCEL_I2C_CLOCK_SOURCE I2C0_CLK_SRC
/* Definition of the clock source frequency */
#define BOARD_ACCEL_I2C_CLK_FREQ CLOCK_GetFreq(BOARD_ACCEL_I2C_CLOCK_SOURCE)
/* Alias for GPIOC peripheral */
#define BOARD_ACCEL_INT_GPIO GPIOC

/* Definitions for BOARD_InitGYROPeripheral functional group */
/* BOARD_InitGYROPeripheral defines for I2C0 */
/* Definition of peripheral ID */
#define BOARD_GYRO_I2C_PERIPHERAL I2C0
/* Definition of the clock source */
#define BOARD_GYRO_I2C_CLOCK_SOURCE I2C0_CLK_SRC
/* Definition of the clock source frequency */
#define BOARD_GYRO_I2C_CLK_FREQ CLOCK_GetFreq(BOARD_GYRO_I2C_CLOCK_SOURCE)
/* Alias for GPIOA peripheral */
#define BOARD_GYRO_INT_GPIO GPIOA

/* Definitions for BOARD_InitSDHCPeripheral functional group */
/* Alias for GPIOD peripheral */
#define BOARD_SDHC_DETECT_GPIO GPIOD

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const i2c_master_config_t I2C_1_config;
extern i2c_master_handle_t I2C_1_handle;
extern uint8_t I2C_1_buffer[I2C_1_BUFFER_SIZE];
extern i2c_master_transfer_t I2C_1_transfer;
extern adc16_channel_config_t ADC16_1_channelsConfig[1];
extern const adc16_config_t ADC16_1_config;
extern const adc16_channel_mux_mode_t ADC16_1_muxMode;
extern const adc16_hardware_average_mode_t ADC16_1_hardwareAverageMode;
extern adc16_channel_config_t ADC16_2_channelsConfig[5];
extern const adc16_config_t ADC16_2_config;
extern const adc16_channel_mux_mode_t ADC16_2_muxMode;
extern const adc16_hardware_average_mode_t ADC16_2_hardwareAverageMode;
extern const dspi_master_config_t DSPI_1_config;
extern dspi_master_handle_t DSPI_1_handle;
extern uint8_t DSPI_1_txBuffer[DSPI_1_BUFFER_SIZE];
extern uint8_t DSPI_1_rxBuffer[DSPI_1_BUFFER_SIZE];
extern const uart_config_t BOARD_DEBUG_UART_config;
extern const i2c_master_config_t BOARD_ACCEL_I2C_config;
extern const i2c_master_config_t BOARD_GYRO_I2C_config;

/***********************************************************************************************************************
 * Callback functions
 **********************************************************************************************************************/
/* I2C transfer callback function for the I2C_1 component (init. function BOARD_InitPeripherals)*/
extern void DISPLAY_TransferCallback(I2C_Type *base, i2c_master_handle_t *handle, status_t status, void *userData);
/* DSPI transfer callback function for the DSPI_1 component (init. function BOARD_InitPeripherals)*/
extern void MAX7219_Callback(SPI_Type *base, dspi_master_handle_t *handle, status_t status, void *userData);

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);
void BOARD_InitBUTTONsPeripheral(void);
void BOARD_InitLEDsPeripheral(void);
void BOARD_InitDEBUG_UARTPeripheral(void);
void BOARD_InitACCELPeripheral(void);
void BOARD_InitGYROPeripheral(void);
void BOARD_InitSDHCPeripheral(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
